/* Add to your existing CSS or create checkout.component.css */
.checkout-page {
  max-width: 1000px;
}

.checkout-steps {
  display: flex;
  justify-content: space-between;
  margin-bottom: 2rem;
  border-bottom: 1px solid var(--border-color);
  padding-bottom: 1rem;
}

.step {
  flex: 1;
  text-align: center;
  padding: 0.5rem;
  color: var(--beige-dark);
  position: relative;
}

.step.active {
  color: var(--primary-dark);
  font-weight: 700;
}

.step.active:after {
  content: '';
  position: absolute;
  bottom: -1.1rem;
  left: 50%;
  transform: translateX(-50%);
  width: 80%;
  height: 3px;
  background-color: var(--primary-color);
}

.checkout-form {
  display: grid;
  gap: 2rem;
}

.form-section {
  background: var(--beige-medium);
  padding: 1.5rem;
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(161, 121, 79, 0.12);
}

.form-row {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin-bottom: 1rem;
}

.form-group {
  margin-bottom: 1.5rem;
}

.form-group label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 600;
  color: var(--primary-dark);
}

.form-group input,
.form-group select {
  width: 100%;
  padding: 0.75rem;
  border: 2px solid var(--border-color);
  border-radius: 6px;
  background-color: #fffefb;
  transition: border-color 0.3s ease;
}

.form-group input:focus,
.form-group select:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 6px var(--primary-color);
}

.error-message {
  color: #b91c1c;
  font-size: 0.85rem;
  margin-top: 0.25rem;
}

.payment-methods {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.payment-option {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
}

.radio-custom {
  width: 18px;
  height: 18px;
  border: 2px solid var(--primary-color);
  border-radius: 50%;
  display: inline-block;
  position: relative;
}

input[type="radio"]:checked + .radio-custom:after {
  content: '';
  width: 10px;
  height: 10px;
  background: var(--primary-color);
  border-radius: 50%;
  position: absolute;
  top: 2px;
  left: 2px;
}

input[type="radio"] {
  display: none;
}

.terms {
  display: flex;
  align-items: center;
}

.checkbox-custom {
  width: 18px;
  height: 18px;
  border: 2px solid var(--primary-color);
  border-radius: 4px;
  display: inline-block;
  margin-right: 0.5rem;
  position: relative;
}

input[type="checkbox"]:checked + .checkbox-custom:after {
  content: 'âœ“';
  position: absolute;
  top: -2px;
  left: 2px;
  color: var(--primary-color);
}

input[type="checkbox"] {
  display: none;
}

.order-summary {
  background: var(--beige-medium);
  padding: 1.5rem;
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(161, 121, 79, 0.12);
}

.order-item {
  display: flex;
  justify-content: space-between;
  padding: 1rem 0;
  border-bottom: 1px solid var(--border-color);
}

.order-item:last-child {
  border-bottom: none;
}

.order-item-details {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.order-item-image {
  width: 50px;
  height: 50px;
  object-fit: contain;
  border-radius: 6px;
  background-color: white;
  border: 1px solid var(--border-color);
  padding: 0.25rem;
}

.order-total {
  font-weight: 700;
  font-size: 1.2rem;
  margin-top: 1.5rem;
  padding-top: 1rem;
  border-top: 1px solid var(--border-color);
  color: var(--primary-color);
  display: flex;
  justify-content: space-between;
}

.submit-order {
  background-color: var(--primary-color);
  color: var(--button-text);
  padding: 1rem;
  border: none;
  border-radius: 8px;
  font-weight: 700;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.3s ease;
  width: 100%;
  margin-top: 1rem;
}

.submit-order:hover:not(:disabled) {
  background-color: var(--primary-dark);
}

.submit-order:disabled {
  background-color: var(--beige-dark);
  cursor: not-allowed;
  opacity: 0.7;
}

.spinner {
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 3px solid rgba(255,255,255,0.3);
  border-radius: 50%;
  border-top-color: white;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}